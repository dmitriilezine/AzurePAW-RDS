{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {

    "domainName": {
      "type": "string",
      "metadata": {
        "description": "Current deployment supports top level domain name only, for example contoso.com, fabrikam.com etc"
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "The name of the Administrator of the new VMs and Domain"
      },
      "defaultValue": "labadmin"
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password for the Administrator account of the new VMs and Domain. If you do not change it, then it will look like this: Subscription#SUBSCRIPTIONID"
      },
      "defaultValue": "[concat('Subscription#',subscription().subscriptionId)]"
    },
    "existingVirtualNetworkName": {
      "type": "string",
      "defaultValue": "Add existing vNet Name where this deployment will be deployed to",
      "metadata": {
        "description": "Specify the name for the vNet to whcih this server will be deployed."
      }
    },
    "existingVirtualNetworkRG": {
      "type": "string",
      "defaultValue": "Add vNet RG Name",
      "metadata": {
        "description": "Name of the existing VNET resource group"
      }
    },
    "RdsSubnetName": {
      "type": "string",
      "defaultValue": "Add Subnet Name where RDS CB and GW will be deployed in vNet -> RDSSubnet...",
      "metadata": {
        "description": "Name of the subnet in the virtual network you want to put this VM"
      }
    },
    "RdsHostsSubnetName": {
      "type": "string",
      "defaultValue": "Add Subnet Name where RDS Hosts will be deployed in vNet -> RDSHostsSubnet...",
      "metadata": {
        "description": "Name of the subnet in the virtual network you want to put this VM"
      }
    },
    "subscriptionID": {
      "type": "string",
      "metadata": {
        "description": "Subscription ID is used to provide access path to the Secrets Key Vault"
      },
      "defaultValue": "Subscription ID for Secrets Key Vault that provide access to the deployment scripts."
    },
    "secretsVaultName": {
      "type": "string",
      "metadata": {
        "description": "The name of the Key Vault where secrets are stored for accessing deployment scripts"
      }
    },
    "secretsKeyVaultRG": {
      "type": "string",
      "metadata": {
        "description": "The name of the RG where Secrets Key Vault is stored"
      }
    },
    "VirtualMachineSize": {
      "type": "string",
      "allowedValues": [
        "Standard_DS12_v2",
        "Standard_DS2_v2",
        "Standard_D8S_v3",
        "Standard_A2"
      ],
      "metadata": {
        "description": "VM Size. The bigger it is, the more $ you will spend."
      },
      "defaultValue": "Standard_DS2_v2"
    },
    "DC1VMName": {
      "type": "string",
      "metadata": {
        "description": "Specify the name of the Domain Controller with DNS. It will be targeted to create ILB DNS A records"
      },
      "defaultValue": "Replace with DC1 Name"
    },
    "adminHost1VMName": {
      "type": "string",
      "metadata": {
        "description": "Must be compliant with Windows Server naming convention"
      },
      "defaultValue": "AdminHost1"
    },
    "adminHost2VMName": {
      "type": "string",
      "metadata": {
        "description": "Must be compliant with Windows Server naming convention"
      },
      "defaultValue": "AdminHost2"
    },
    "adminHost3VMName": {
      "type": "string",
      "metadata": {
        "description": "Must be compliant with Windows Server naming convention"
      },
      "defaultValue": "AdminHost3"
    },
    "ConnectionBrocker1VMName": {
      "type": "string",
      "metadata": {
        "description": "Must be compliant with Windows Server naming convention"
      },
      "defaultValue": "CB1-LAB"
    },
    "ConnectionBrocker2VMName": {
      "type": "string",
      "metadata": {
        "description": "Must be compliant with Windows Server naming convention"
      },
      "defaultValue": "CB2-LAB"
    },
    "Gateway1VMName": {
      "type": "string",
      "metadata": {
        "description": "Must be compliant with Windows Server naming convention"
      },
      "defaultValue": "GW1-LAB"
    },
    "Gateway2VMName": {
      "type": "string",
      "metadata": {
        "description": "Must be compliant with Windows Server naming convention"
      },
      "defaultValue": "GW2-LAB"
    },
    "Host1IPAddress": {
      "type": "string",
      "metadata": {
        "description": "IP address for RDS Host 1"
      },
      "defaultValue": "10.0.7.4"
    },
    "Host2IPAddress": {
      "type": "string",
      "metadata": {
        "description": "IP address for RDS Host 2"
      },
      "defaultValue": "10.0.7.5"
    },
    "Host3IPAddress": {
      "type": "string",
      "metadata": {
        "description": "IP address for RDS Host 3"
      },
      "defaultValue": "10.0.7.6"
    },
    "ConnectionBrocker1IPAddress": {
      "type": "string",
      "metadata": {
        "description": "IP address for RDS Connection Brocker 1"
      },
      "defaultValue": "10.0.3.4"
    },
    "ConnectionBrocker2IPAddress": {
      "type": "string",
      "metadata": {
        "description": "IP address for RDS Connection Brocker 2"
      },
      "defaultValue": "10.0.3.5"
    },
    "Gateway1IPAddress": {
      "type": "string",
      "metadata": {
        "description": "IP address for RDS Gateway 1"
      },
      "defaultValue": "10.0.3.6"
    },
    "Gateway2IPAddress": {
      "type": "string",
      "metadata": {
        "description": "IP address for RDS Gateway 2"
      },
      "defaultValue": "10.0.3.7"
    },
    "ILBforConnectionBrocker": {
      "type": "string",
      "metadata": {
        "description": "ILB for Connection Brocker"
      },
      "defaultValue": "10.0.3.100"
    },
    "ILBforGateway": {
      "type": "string",
      "metadata": {
        "description": "ILB for Gateway"
      },
      "defaultValue": "10.0.3.101"
    },
    "ScriptsLocation": {
      "type": "string",
      "metadata": {
        "description": "URL to the Storage Account where scripts are located"
      },
      "defaultValue": "https://azurepaw.blob.core.windows.net"
    },
    "diagnosticsStorageAccountName": {
      "type": "string",
      "defaultValue": "RealStorageAccountName",
      "metadata": {
        "description": "Specify storage account that will be used for VM diagnostics"
      }
    },
    "StorageAccountRG": {
      "type": "string",
      "defaultValue": "RG where Storage account is located",
      "metadata": {
        "description": "Specify storage account RG"
      }
    },
    "adeKeyVaultName": {
      "type": "string",
      "metadata": {
        "description": "Key Vault Name used for Azure Disk Encryption for this VM. Must be in the same region as this VM"
      }
    },
    "adeKeyVaultResourceGroup": {
      "type": "string",
      "metadata": {
        "description": "ADE Key Vault RG"
      }
    },
    "AzureSQLDBServerName": {
      "type": "string",
      "metadata": {
        "description": "Azure SQL DB Short Server Name"
      }
    },
    "AzureSQLDBName": {
      "type": "string",
      "metadata": {
        "description": "Azure SQL DB Name"
      }
    },
    "AzureSQLDBUID": {
      "type": "string",
      "metadata": {
        "description": "Azure SQL DB UID account, ie adminaccount@dbservername"
      }
    },
    "AzureSQLDBPWD": {
      "type": "securestring",
      "metadata": {
        "description": "Azure SQL DB UID account password"
      }
    },
    "AADAppProxyExternalURL": {
      "type": "string",
      "metadata": {
        "description": "AAD App Proxy External URL"
      }
    },
    "CBPFXFileName": {
      "type": "string",
      "metadata": {
        "description": "Connection Broker PFX Cert File Name, ie rds.contoso.com.pfx"
      }
    },
    "CBPFXFilePassword": {
      "type": "securestring",
      "metadata": {
        "description": "Connection Broker PFX Cert Password"
      }
    },
    "GWPFXFileName": {
      "type": "string",
      "metadata": {
        "description": "Gateway PFX Cert File Name, ie gateway.contoso.com.pfx"
      }
    },
    "GWPFXFilePassword": {
      "type": "securestring",
      "metadata": {
        "description": "Gateway PFX Cert Password"
      }
    }
  },
  "variables": {
    "assetLocation": "https://raw.githubusercontent.com/dmitriilezine/AzurePAW-RDS/master/AzurePAW-RDS",
    "assetLocationStorageAccount": "[parameters('ScriptsLocation')]",
    "VMSize": "[parameters('VirtualMachineSize')]",
    "OSVersion": "2016-Datacenter",
    "numberOfRdshInstances": 2,

    "RDSsubnetResourceID": "[resourceId(parameters('existingVirtualNetworkRG'), 'Microsoft.Network/virtualNetworks/subnets', parameters('existingVirtualNetworkName'), parameters('RdsSubnetName'))]",
    "RDSHostssubnetResourceID": "[resourceId(parameters('existingVirtualNetworkRG'), 'Microsoft.Network/virtualNetworks/subnets', parameters('existingVirtualNetworkName'), parameters('RdsHostsSubnetName'))]",

    "primaryAzurePAW1IpAddress": "[parameters('Host1IPAddress')]",
    "primaryAzurePAW2IpAddress": "[parameters('Host2IPAddress')]",
    "primaryAzurePAW3IpAddress": "[parameters('Host3IPAddress')]",
    "primaryCB1IpAddress": "[parameters('ConnectionBrocker1IPAddress')]",
    "primaryCB2IpAddress": "[parameters('ConnectionBrocker2IPAddress')]",
    "primaryGW1IpAddress": "[parameters('Gateway1IPAddress')]",
    "primaryGW2IpAddress": "[parameters('Gateway2IPAddress')]",

    "ilbRDSCBprivateIPAddress": "[parameters('ILBforConnectionBrocker')]",
    "ilbRDSGWprivateIPAddress": "[parameters('ILBforGateway')]",

    "ilbGWTemplateURL": "[concat(variables('assetLocation'),'/data/ilbDeploymentGW.json')]",
    "ilbCBTemplateURL": "[concat(variables('assetLocation'),'/data/ilbDeploymentCB.json')]",
    "AzurePAW1VMTemplateURL": "[concat(variables('assetLocation'),'/data/AdminHost1VM.json')]",
    "cbgwVMTemplateURL": "[concat(variables('assetLocation'),'/data/cbgwVM.json')]",
    "deployRDCBTemplateURL": "[concat(variables('assetLocation'),'/data/deployRDCB.json')]",
    "deployRDCB2TemplateURL": "[concat(variables('assetLocation'),'/data/deployRDCB2.json')]",
    "deployRDGWTemplateURL": "[concat(variables('assetLocation'),'/data/deployRDGW.json')]",
    "deployRDSHTemplateURL": "[concat(variables('assetLocation'),'/data/deployRDSH.json')]",
    "vmDiagnosticsTemplateURL": "[concat(variables('assetLocation'),'/data/vmDiagnostics.json')]",
    "vmAntimalwareTemplateURL": "[concat(variables('assetLocation'),'/data/deployAntimalware.json')]",
    "vmADETemplateURL": "[concat(variables('assetLocation'),'/data/encryptVM.json')]",

    "paw1VMName": "[parameters('adminHost1VMName')]",
    "paw2VMName": "[parameters('adminHost2VMName')]",
    "paw3VMName": "[parameters('adminHost3VMName')]",
    "cb1VMName": "[parameters('ConnectionBrocker1VMName')]",
    "cb2VMName": "[parameters('ConnectionBrocker2VMName')]",
    "gw1VMName": "[parameters('Gateway1VMName')]",
    "gw2VMName": "[parameters('Gateway2VMName')]",

    "deployILBforRDSCB": "DeployILBforRDSCB",
    "deployILBforRDSCBId": "[concat('Microsoft.Resources/deployments/', variables('deployILBforRDSCB'))]",
    "deployILBforRDSGW": "DeployILBforRDSGW",
    "deployILBforRDSGWId": "[concat('Microsoft.Resources/deployments/', variables('deployILBforRDSGW'))]",

    "paw1VMDeployment": "CreatePAW1VM",
    "paw1DeploymentId": "[concat('Microsoft.Resources/deployments/', variables('paw1VMDeployment'))]",
    "paw2VMDeployment": "CreatePAW2VM",
    "paw2VMDeploymentId": "[concat('Microsoft.Resources/deployments/', variables('paw2VMDeployment'))]",
    "paw3VMDeployment": "CreatePAW3VM",
    "paw3VMDeploymentId": "[concat('Microsoft.Resources/deployments/', variables('paw3VMDeployment'))]",

    "cb1VMDeployment": "CreateCB1VM",
    "cb1VMDeploymentId": "[concat('Microsoft.Resources/deployments/', variables('cb1VMDeployment'))]",
    "cb2VMDeployment": "CreateCB2VM",
    "cb2VMDeploymentId": "[concat('Microsoft.Resources/deployments/', variables('cb2VMDeployment'))]",
    "gw1VMDeployment": "CreateGW1VM",
    "gw1VMDeploymentId": "[concat('Microsoft.Resources/deployments/', variables('gw1VMDeployment'))]",
    "gw2VMDeployment": "CreateGW2VM",
    "gw2VMDeploymentId": "[concat('Microsoft.Resources/deployments/', variables('gw2VMDeployment'))]",
    "cb1Deployment": "DeployRDCB-RDLS",
    "cb1DeploymentId": "[concat('Microsoft.Resources/deployments/', variables('cb1Deployment'))]",
    "cb2Deployment": "DeploySQLDriver-on-CB2",
    "cb2DeploymentId": "[concat('Microsoft.Resources/deployments/', variables('cb2Deployment'))]",
    "gw1Deployment": "DeployRDGW-RDWeb-on-GW1",
    "gw1DeploymentId": "[concat('Microsoft.Resources/deployments/', variables('gw1Deployment'))]",
    "gw2Deployment": "DeployRDGW-RDWeb-on-GW2",
    "gw2DeploymentId": "[concat('Microsoft.Resources/deployments/', variables('gw2Deployment'))]",
    "rdshDeploymentOnPAW1": "DeployRDSHonPAW1",
    "rdshDeploymentId": "[concat('Microsoft.Resources/deployments/', variables('rdshDeploymentOnPAW1'))]",
    "rdshDeploymentOnPAW2": "DeployRDSHonPAW2",
    "rdshDeploymentPAW2Id": "[concat('Microsoft.Resources/deployments/', variables('rdshDeploymentOnPAW2'))]",
    "rdshDeploymentOnPAW3": "DeployRDSHonPAW3",
    "rdshDeploymentPAW3Id": "[concat('Microsoft.Resources/deployments/', variables('rdshDeploymentOnPAW3'))]",

    "deployVMDiagnosticsHost1": "deployVMDiagnosticsHost1",
    "deployVMDiagnosticsHost1Id": "[concat('Microsoft.Resources/deployments/', variables('deployVMDiagnosticsHost1'))]",
    "deployVMDiagnosticsHost2": "deployVMDiagnosticsHost2",
    "deployVMDiagnosticsHost2Id": "[concat('Microsoft.Resources/deployments/', variables('deployVMDiagnosticsHost2'))]",
    "deployVMDiagnosticsHost3": "deployVMDiagnosticsHost3",
    "deployVMDiagnosticsHost3Id": "[concat('Microsoft.Resources/deployments/', variables('deployVMDiagnosticsHost3'))]",
    "deployVMDiagnosticsGW1": "deployVMDiagnosticsGW1",
    "deployVMDiagnosticsGW1Id": "[concat('Microsoft.Resources/deployments/', variables('deployVMDiagnosticsGW1'))]",
    "deployVMDiagnosticsGW2": "deployVMDiagnosticsGW2",
    "deployVMDiagnosticsGW2Id": "[concat('Microsoft.Resources/deployments/', variables('deployVMDiagnosticsGW2'))]",
    "deployVMDiagnosticsCB1": "deployVMDiagnosticsCB1",
    "deployVMDiagnosticsCB1Id": "[concat('Microsoft.Resources/deployments/', variables('deployVMDiagnosticsCB1'))]",
    "deployVMDiagnosticsCB2": "deployVMDiagnosticsCB2",
    "deployVMDiagnosticsCB2Id": "[concat('Microsoft.Resources/deployments/', variables('deployVMDiagnosticsCB2'))]",

    "deployAntimalwareHost1": "deployAntimalwareHost1",
    "deployAntimalwareHost1Id": "[concat('Microsoft.Resources/deployments/', variables('deployAntimalwareHost1'))]",
    "deployAntimalwareHost2": "deployAntimalwareHost2",
    "deployAntimalwareHost2Id": "[concat('Microsoft.Resources/deployments/', variables('deployAntimalwareHost2'))]",
    "deployAntimalwareHost3": "deployAntimalwareHost3",
    "deployAntimalwareHost3Id": "[concat('Microsoft.Resources/deployments/', variables('deployAntimalwareHost3'))]",
    "deployAntimalwareGW1": "deployAntimalwareGW1",
    "deployAntimalwareGW1Id": "[concat('Microsoft.Resources/deployments/', variables('deployAntimalwareGW1'))]",
    "deployAntimalwareGW2": "deployAntimalwareGW2",
    "deployAntimalwareGW2Id": "[concat('Microsoft.Resources/deployments/', variables('deployAntimalwareGW2'))]",
    "deployAntimalwareCB1": "deployAntimalwareCB1",
    "deployAntimalwareCB1Id": "[concat('Microsoft.Resources/deployments/', variables('deployAntimalwareCB1'))]",
    "deployAntimalwareCB2": "deployAntimalwareCB2",
    "deployAntimalwareCB2Id": "[concat('Microsoft.Resources/deployments/', variables('deployAntimalwareCB2'))]",

    "encryptHost1": "encryptHost1",
    "encryptHost1Id": "[concat('Microsoft.Resources/deployments/', variables('encryptHost1'))]",
    "encryptHost2": "encryptHost2",
    "encryptHost2Id": "[concat('Microsoft.Resources/deployments/', variables('encryptHost2'))]",
    "encryptHost3": "encryptHost3",
    "encryptHost3Id": "[concat('Microsoft.Resources/deployments/', variables('encryptHost3'))]",
    "encryptGW1": "encryptGW1",
    "encryptGW1Id": "[concat('Microsoft.Resources/deployments/', variables('encryptGW1'))]",
    "encryptGW2": "encryptGW2",
    "encryptGW2Id": "[concat('Microsoft.Resources/deployments/', variables('encryptGW2'))]",
    "encryptCB1": "encryptCB1",
    "encryptCB1Id": "[concat('Microsoft.Resources/deployments/', variables('encryptCB1'))]",
    "encryptCB2": "encryptCB2",
    "encryptCB2Id": "[concat('Microsoft.Resources/deployments/', variables('encryptCB2'))]",

    "shortDomainName": "[split(parameters('domainName'),'.')[0]]",
    "domainSuffix": "[split(parameters('domainName'),'.')[1]]",
    "ouPathT0Devices": "[concat('OU=T0-Devices; OU=Tier 0; OU=Admin;', 'DC=',variables('shortDomainName'),'; DC=',variables('domainSuffix'))]",
    "ouPathAdmin": "[concat('OU=Admin;', 'DC=',variables('shortDomainName'),'; DC=',variables('domainSuffix'))]",
    "ouPathHGS": "[concat('OU=T0-HGS; OU=T0-Servers; OU=Tier 0; OU=Admin;', 'DC=',variables('shortDomainName'),'; DC=',variables('domainSuffix'))]",
    "ouPathT0Idenity": "[concat('OU=T0-Identity; OU=T0-Servers; OU=Tier 0; OU=Admin;', 'DC=',variables('shortDomainName'),'; DC=',variables('domainSuffix'))]",
    "ouPathNone": "",

    "secretsVaultName": "[parameters('secretsVaultName')]",
    "secretName": "AzurePAWPOC1SAKey2",
    "secretnameSASurl": "AzurePAWPOC1SAS",
    "secretsKeyVaultRG": "[parameters('secretsKeyVaultRG')]",
    "secretsKeyVaultID": "[concat('/subscriptions/', parameters('subscriptionID'), '/resourceGroups/', variables('secretsKeyVaultRG'), '/providers/Microsoft.KeyVault/vaults/', variables('secretsVaultName'))]",

    "diagnosticsaccountid": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/',parameters('StorageAccountRG'), '/providers/','Microsoft.Storage/storageAccounts/', parameters('diagnosticsStorageAccountName'))]",

    "imageOffer": "WindowsServer",
    "imagePublisher": "MicrosoftWindowsServer",

    "cbAvailabilitySetName": "cbAvailabiltySet",
    "gwAvailabilitySetName": "gwAvailabiltySet",
    "rdshAvailabilitySetName": "rdshAvailabiltySet",

    "ilbRDSCBName": "[concat('ilbRDSCB',resourceGroup().name)]",
    "ilbRDSCBID": "[resourceId('Microsoft.Network/loadBalancers',variables('ilbRDSCBName'))]",
    "ilbRDSGWName": "[concat('ilbRDSGW',resourceGroup().name)]",
    "ilbRDSGWID": "[resourceId('Microsoft.Network/loadBalancers',variables('ilbRDSGWName'))]",

    "paw1NICName": "[concat('PAW1-Nic',resourceGroup().name)]",
    "paw2NICName": "[concat('PAW2-Nic',resourceGroup().name)]",
    "paw3NICName": "[concat('PAW3-Nic',resourceGroup().name)]",
    "cb1NICName": "[concat('CB1-Nic',resourceGroup().name)]",
    "cb2NICName": "[concat('CB2-Nic',resourceGroup().name)]",
    "gw1NICName": "[concat('GW1-Nic',resourceGroup().name)]",
    "gw2NICName": "[concat('GW2-Nic',resourceGroup().name)]"

  },
  "resources": [
    {
      "name": "[variables('cbAvailabilitySetName')]",
      "type": "Microsoft.Compute/availabilitySets",
      "apiVersion": "2017-03-30",
      "location": "[resourceGroup().location]",
      "properties": {
        "PlatformUpdateDomainCount": 3,
        "PlatformFaultDomainCount": 2
      },
      "sku": {
        "name": "Aligned"
      }
    },
    {
      "name": "[variables('gwAvailabilitySetName')]",
      "type": "Microsoft.Compute/availabilitySets",
      "apiVersion": "2017-03-30",
      "location": "[resourceGroup().location]",
      "properties": {
        "PlatformUpdateDomainCount": 3,
        "PlatformFaultDomainCount": 2
      },
      "sku": {
        "name": "Aligned"
      }
    },
    {
      "name": "[variables('rdshAvailabilitySetName')]",
      "type": "Microsoft.Compute/availabilitySets",
      "apiVersion": "2017-03-30",
      "location": "[resourceGroup().location]",
      "properties": {
        "PlatformUpdateDomainCount": 20,
        "PlatformFaultDomainCount": 2
      },
      "sku": {
        "name": "Aligned"
      }
    },
    {
      "name": "[variables('deployILBforRDSCB')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": { "uri": "[variables('ilbCBTemplateURL')]" },
        "parameters": {
          "ilbName": { "value": "[variables('ilbRDSCBName')]" },
          "subnetResourceID": { "value": "[variables('RDSsubnetResourceID')]" },
          "ilbPrivateIPAddress": { "value": "[variables('ilbRDSCBprivateIPAddress')]" }
        }
      }
    },
    {
      "name": "[variables('deployILBforRDSGW')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": { "uri": "[variables('ilbGWTemplateURL')]" },
        "parameters": {
          "ilbName": { "value": "[variables('ilbRDSGWName')]" },
          "subnetResourceID": { "value": "[variables('RDSsubnetResourceID')]" },
          "ilbPrivateIPAddress": { "value": "[variables('ilbRDSGWprivateIPAddress')]" }
        }
      }
    },
    {
      "comments": "Deploy Azure PAW #1 VM",
      "name": "[variables('paw1VMDeployment')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[variables('rdshAvailabilitySetName')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('AzurePAW1VMTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "subnetResourceID": {
            "value": "[variables('RDSHostssubnetResourceID')]"
          },
          "windowsImageSKU": {
            "value": "[variables('OSVersion')]"
          },
          "vmName": {
            "value": "[variables('paw1VMName')]"
          },
          "vmSize": {
            "value": "[variables('VMSize')]"
          },
          "NicName": {
            "value": "[variables('paw1NICName')]"
          },
          "primaryIpAddress": {
            "value": "[variables('primaryAzurePAW1IpAddress')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "availabilitySetName": {
            "value": "[variables('rdshAvailabilitySetName')]"
          },
          "ouPath": {
            "value": "[variables('ouPathAdmin')]"
          },
          "diagnosticsStorageAccountName": {
            "value": "[parameters('diagnosticsStorageAccountName')]"
          }
        }
      }
    },
    {
      "comments": "Deploy Azure PAW #2 VM",
      "name": "[variables('paw2VmDeployment')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[variables('rdshAvailabilitySetName')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('AzurePAW1VMTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "subnetResourceID": {
            "value": "[variables('RDSHostssubnetResourceID')]"
          },
          "windowsImageSKU": {
            "value": "[variables('OSVersion')]"
          },
          "vmName": {
            "value": "[variables('paw2VMName')]"
          },
          "vmSize": {
            "value": "[variables('VMSize')]"
          },
          "NicName": {
            "value": "[variables('paw2NICName')]"
          },
          "primaryIpAddress": {
            "value": "[variables('primaryAzurePAW2IpAddress')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "availabilitySetName": {
            "value": "[variables('rdshAvailabilitySetName')]"
          },
          "ouPath": {
            "value": "[variables('ouPathAdmin')]"
          },
          "diagnosticsStorageAccountName": {
            "value": "[parameters('diagnosticsStorageAccountName')]"
          }
        }
      }
    },
    {
      "comments": "Deploy Azure PAW #3 VM",
      "name": "[variables('paw3VMDeployment')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[variables('rdshAvailabilitySetName')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('AzurePAW1VMTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "subnetResourceID": {
            "value": "[variables('RDSHostssubnetResourceID')]"
          },
          "windowsImageSKU": {
            "value": "[variables('OSVersion')]"
          },
          "vmName": {
            "value": "[variables('paw3VMName')]"
          },
          "vmSize": {
            "value": "[variables('VMSize')]"
          },
          "NicName": {
            "value": "[variables('paw3NICName')]"
          },
          "primaryIpAddress": {
            "value": "[variables('primaryAzurePAW3IpAddress')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "availabilitySetName": {
            "value": "[variables('rdshAvailabilitySetName')]"
          },
          "ouPath": {
            "value": "[variables('ouPathAdmin')]"
          },
          "diagnosticsStorageAccountName": {
            "value": "[parameters('diagnosticsStorageAccountName')]"
          }
        }
      }
    },
    {
      "comments": "Deploy RDS CB and LS VM #1",
      "name": "[variables('cb1VMDeployment')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[variables('cbAvailabilitySetName')]",
        "[variables('deployILBforRDSCB')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('cbgwVMTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "subnetResourceID": {
            "value": "[variables('RDSsubnetResourceID')]"
          },
          "windowsImageSKU": {
            "value": "[variables('OSVersion')]"
          },
          "vmName": {
            "value": "[variables('cb1VMName')]"
          },
          "vmSize": {
            "value": "[variables('VMSize')]"
          },
          "NicName": {
            "value": "[variables('cb1NICName')]"
          },
          "primaryIpAddress": {
            "value": "[variables('primaryCB1IpAddress')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "availabilitySetName": {
            "value": "[variables('cbAvailabilitySetName')]"
          },
          "ouPath": {
            "value": "[variables('ouPathAdmin')]"
          },
          "diagnosticsStorageAccountName": {
            "value": "[parameters('diagnosticsStorageAccountName')]"
          },
          "ilbID": {
            "value": "[variables('ilbRDSCBID')]"
          }
        }
      }
    },
    {
      "comments": "Deploy RDS CB and LS VM #2",
      "name": "[variables('cb2VMDeployment')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[variables('cbAvailabilitySetName')]",
        "[variables('deployILBforRDSCB')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('cbgwVMTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "subnetResourceID": {
            "value": "[variables('RDSsubnetResourceID')]"
          },
          "windowsImageSKU": {
            "value": "[variables('OSVersion')]"
          },
          "vmName": {
            "value": "[variables('cb2VMName')]"
          },
          "vmSize": {
            "value": "[variables('VMSize')]"
          },
          "NicName": {
            "value": "[variables('cb2NICName')]"
          },
          "primaryIpAddress": {
            "value": "[variables('primaryCB2IpAddress')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "availabilitySetName": {
            "value": "[variables('cbAvailabilitySetName')]"
          },
          "ouPath": {
            "value": "[variables('ouPathAdmin')]"
          },
          "diagnosticsStorageAccountName": {
            "value": "[parameters('diagnosticsStorageAccountName')]"
          },
          "ilbID": {
            "value": "[variables('ilbRDSCBID')]"
          }
        }
      }
    },
    {
      "comments": "Deploy RDS GW and Web VM #1",
      "name": "[variables('gw1VMDeployment')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[variables('gwAvailabilitySetName')]",
        "[variables('deployILBforRDSGW')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('cbgwVMTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "subnetResourceID": {
            "value": "[variables('RDSsubnetResourceID')]"
          },
          "windowsImageSKU": {
            "value": "[variables('OSVersion')]"
          },
          "vmName": {
            "value": "[variables('gw1VMName')]"
          },
          "vmSize": {
            "value": "[variables('VMSize')]"
          },
          "NicName": {
            "value": "[variables('gw1NICName')]"
          },
          "primaryIpAddress": {
            "value": "[variables('primaryGW1IpAddress')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "availabilitySetName": {
            "value": "[variables('gwAvailabilitySetName')]"
          },
          "ouPath": {
            "value": "[variables('ouPathAdmin')]"
          },
          "diagnosticsStorageAccountName": {
            "value": "[parameters('diagnosticsStorageAccountName')]"
          },
          "ilbID": {
            "value": "[variables('ilbRDSGWID')]"
          }
        }
      }
    },
    {
      "comments": "Deploy RDS GW and Web VM #2",
      "name": "[variables('gw2VMDeployment')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[variables('gwAvailabilitySetName')]",
        "[variables('deployILBforRDSGW')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('cbgwVMTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "subnetResourceID": {
            "value": "[variables('RDSsubnetResourceID')]"
          },
          "windowsImageSKU": {
            "value": "[variables('OSVersion')]"
          },
          "vmName": {
            "value": "[variables('gw2VMName')]"
          },
          "vmSize": {
            "value": "[variables('VMSize')]"
          },
          "NicName": {
            "value": "[variables('gw2NICName')]"
          },
          "primaryIpAddress": {
            "value": "[variables('primaryGW2IpAddress')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "availabilitySetName": {
            "value": "[variables('gwAvailabilitySetName')]"
          },
          "ouPath": {
            "value": "[variables('ouPathAdmin')]"
          },
          "diagnosticsStorageAccountName": {
            "value": "[parameters('diagnosticsStorageAccountName')]"
          },
          "ilbID": {
            "value": "[variables('ilbRDSGWID')]"
          }
        }
      }
    },
    {
      "comments": "Deploy RDGW and RDWeb on GW VM1",
      "name": "[variables('gw1Deployment')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[variables('gw1VMDeployment')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('deployRDGWTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "VMName": {
            "value": "[variables('gw1VMName')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "assetLocationStorageAccount": {
            "value": "[variables('assetLocationStorageAccount')]"
          },
          "storageAccountKeyviaKeyvault": {
            "reference": {
              "keyVault": {
                "id": "[variables('secretsKeyVaultID')]"
              },
              "secretName": "[variables('secretName')]"
            }
          },
          "storageAccountSASTokenviaKeyvault": {
            "reference": {
              "keyVault": {
                "id": "[variables('secretsKeyVaultID')]"
              },
              "secretName": "[variables('secretnameSASurl')]"
            }
          }
        }
      }
    },
    {
      "comments": "Deploy RDGW and RDWeb on GW VM2",
      "name": "[variables('gw2Deployment')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[variables('gw2VMDeployment')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('deployRDGWTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "VMName": {
            "value": "[variables('gw2VMName')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "assetLocationStorageAccount": {
            "value": "[variables('assetLocationStorageAccount')]"
          },
          "storageAccountKeyviaKeyvault": {
            "reference": {
              "keyVault": {
                "id": "[variables('secretsKeyVaultID')]"
              },
              "secretName": "[variables('secretName')]"
            }
          },
          "storageAccountSASTokenviaKeyvault": {
            "reference": {
              "keyVault": {
                "id": "[variables('secretsKeyVaultID')]"
              },
              "secretName": "[variables('secretnameSASurl')]"
            }
          }
        }
      }
    },
    {
      "comments": "Deploy RDSH on Host1",
      "name": "[variables('rdshDeploymentOnPAW1')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[variables('paw1VMDeployment')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('deployRDSHTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "VMName": {
            "value": "[variables('paw1VMName')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "assetLocationStorageAccount": {
            "value": "[variables('assetLocationStorageAccount')]"
          },
          "storageAccountKeyviaKeyvault": {
            "reference": {
              "keyVault": {
                "id": "[variables('secretsKeyVaultID')]"
              },
              "secretName": "[variables('secretName')]"
            }
          },
          "storageAccountSASTokenviaKeyvault": {
            "reference": {
              "keyVault": {
                "id": "[variables('secretsKeyVaultID')]"
              },
              "secretName": "[variables('secretnameSASurl')]"
            }
          }
        }
      }
    },
    {
      "comments": "Deploy RDSH on Host2",
      "name": "[variables('rdshDeploymentOnPAW2')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[variables('paw2VMDeployment')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('deployRDSHTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "VMName": {
            "value": "[variables('paw2VMName')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "assetLocationStorageAccount": {
            "value": "[variables('assetLocationStorageAccount')]"
          },
          "storageAccountKeyviaKeyvault": {
            "reference": {
              "keyVault": {
                "id": "[variables('secretsKeyVaultID')]"
              },
              "secretName": "[variables('secretName')]"
            }
          },
          "storageAccountSASTokenviaKeyvault": {
            "reference": {
              "keyVault": {
                "id": "[variables('secretsKeyVaultID')]"
              },
              "secretName": "[variables('secretnameSASurl')]"
            }
          }
        }
      }
    },
    {
      "comments": "Deploy RDSH on Host3",
      "name": "[variables('rdshDeploymentOnPAW3')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[variables('paw3VMDeployment')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('deployRDSHTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "VMName": {
            "value": "[variables('paw3VMName')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "assetLocationStorageAccount": {
            "value": "[variables('assetLocationStorageAccount')]"
          },
          "storageAccountKeyviaKeyvault": {
            "reference": {
              "keyVault": {
                "id": "[variables('secretsKeyVaultID')]"
              },
              "secretName": "[variables('secretName')]"
            }
          },
          "storageAccountSASTokenviaKeyvault": {
            "reference": {
              "keyVault": {
                "id": "[variables('secretsKeyVaultID')]"
              },
              "secretName": "[variables('secretnameSASurl')]"
            }
          }
        }
      }
    },
    {
      "comments": "Deploy RDCB and RDLS on CB VM1",
      "name": "[variables('cb1Deployment')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[variables('cb1VMDeployment')]",
        "[variables('cb2VMDeployment')]",
        "[variables('gw1Deployment')]",
        "[variables('gw2Deployment')]",
        "[variables('rdshDeploymentOnPAW1')]",
        "[variables('rdshDeploymentOnPAW2')]",
        "[variables('rdshDeploymentOnPAW3')]",
        "[variables('cb2Deployment')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('deployRDCBTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "VMName": {
            "value": "[variables('cb1VMName')]"
          },
          "gwVMName": {
            "value": "[variables('gw1VMName')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "cb2VMName": {
            "value": "[variables('cb2VMName')]"
          },
          "gw2VMName": {
            "value": "[variables('gw2VMName')]"
          },
          "sh1VMName": {
            "value": "[variables('paw1VMName')]"
          },
          "sh2VMName": {
            "value": "[variables('paw2VMName')]"
          },
          "sh3VMName": {
            "value": "[variables('paw3VMName')]"
          },
          "assetLocationStorageAccount": {
            "value": "[variables('assetLocationStorageAccount')]"
          },
          "storageAccountKeyviaKeyvault": {
            "reference": {
              "keyVault": {
                "id": "[variables('secretsKeyVaultID')]"
              },
              "secretName": "[variables('secretName')]"
            }
          },
          "storageAccountSASTokenviaKeyvault": {
            "reference": {
              "keyVault": {
                "id": "[variables('secretsKeyVaultID')]"
              },
              "secretName": "[variables('secretnameSASurl')]"
            }
          },
          "AzureDBServerName": {
            "value": "[parameters('AzureSQLDBServerName')]"
          },
          "AzureDBName": {
            "value": "[parameters('AzureSQLDBName')]"
          },
          "AzureDBUID": {
            "value": "[parameters('AzureSQLDBUID')]"
          },
          "AzureSQLDBPWD": {
            "value": "[parameters('AzureSQLDBPWD')]"
          },
          "DC1VMName": {
            "value": "[parameters('DC1VMName')]"
          },
          "CBILBIPAddress": {
            "value": "[parameters('ILBforConnectionBrocker')]"
          },
          "GWILBIPAddress": {
            "value": "[parameters('ILBforGateway')]"
          },
          "AADAppProxyexternalURL": {
            "value": "[parameters('AADAppProxyExternalURL')]"
          },
          "cbpfxpwd": {
            "value": "[parameters('CBPFXFilePassword')]"
          },
          "gwpfxpwd": {
            "value": "[parameters('GWPFXFilePassword')]"
          },
          "CBPFXFile": {
            "value": "[parameters('CBPFXFileName')]"
          },
          "GWPFXFile": {
            "value": "[parameters('GWPFXFileName')]"
          }
        }
      }
    },
    {
      "comments": "Deploy SQL Driver on CB VM2",
      "name": "[variables('cb2Deployment')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[variables('cb2VMDeployment')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('deployRDCB2TemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "VMName": {
            "value": "[variables('cb2VMName')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
         "assetLocationStorageAccount": {
            "value": "[variables('assetLocationStorageAccount')]"
          },
          "storageAccountKeyviaKeyvault": {
            "reference": {
              "keyVault": {
                "id": "[variables('secretsKeyVaultID')]"
              },
              "secretName": "[variables('secretName')]"
            }
          },
          "storageAccountSASTokenviaKeyvault": {
            "reference": {
              "keyVault": {
                "id": "[variables('secretsKeyVaultID')]"
              },
              "secretName": "[variables('secretnameSASurl')]"
            }
          }
        }
      }
    },
    {
      "name": "[variables('deployVMDiagnosticsHost1')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[variables('paw1VMDeployment')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('vmDiagnosticsTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vmName": {
            "value": "[variables('paw1VMName')]"
          },
          "diagnosticsStorageAccountName": {
            "value": "[parameters('diagnosticsStorageAccountName')]"
          },
          "accountid": {
            "value": "[variables('diagnosticsaccountid')]"
          }
        }
      }
    },
    {
      "name": "[variables('deployVMDiagnosticsHost2')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[variables('paw2VMDeployment')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('vmDiagnosticsTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vmName": {
            "value": "[variables('paw2VMName')]"
          },
          "diagnosticsStorageAccountName": {
            "value": "[parameters('diagnosticsStorageAccountName')]"
          },
          "accountid": {
            "value": "[variables('diagnosticsaccountid')]"
          }
        }
      }
    },
    {
      "name": "[variables('deployVMDiagnosticsHost3')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[variables('paw3VMDeployment')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('vmDiagnosticsTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vmName": {
            "value": "[variables('paw3VMName')]"
          },
          "diagnosticsStorageAccountName": {
            "value": "[parameters('diagnosticsStorageAccountName')]"
          },
          "accountid": {
            "value": "[variables('diagnosticsaccountid')]"
          }
        }
      }
    },
    {
      "name": "[variables('deployVMDiagnosticsGW1')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[variables('gw1VMDeployment')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('vmDiagnosticsTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vmName": {
            "value": "[variables('gw1VMName')]"
          },
          "diagnosticsStorageAccountName": {
            "value": "[parameters('diagnosticsStorageAccountName')]"
          },
          "accountid": {
            "value": "[variables('diagnosticsaccountid')]"
          }
        }
      }
    },
    {
      "name": "[variables('deployVMDiagnosticsGW2')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[variables('gw2VMDeployment')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('vmDiagnosticsTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vmName": {
            "value": "[variables('gw2VMName')]"
          },
          "diagnosticsStorageAccountName": {
            "value": "[parameters('diagnosticsStorageAccountName')]"
          },
          "accountid": {
            "value": "[variables('diagnosticsaccountid')]"
          }
        }
      }
    },
    {
      "name": "[variables('deployVMDiagnosticsCB1')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[variables('cb1VMDeployment')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('vmDiagnosticsTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vmName": {
            "value": "[variables('cb1VMName')]"
          },
          "diagnosticsStorageAccountName": {
            "value": "[parameters('diagnosticsStorageAccountName')]"
          },
          "accountid": {
            "value": "[variables('diagnosticsaccountid')]"
          }
        }
      }
    },
    {
      "name": "[variables('deployVMDiagnosticsCB2')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[variables('cb2VMDeployment')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('vmDiagnosticsTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vmName": {
            "value": "[variables('cb2VMName')]"
          },
          "diagnosticsStorageAccountName": {
            "value": "[parameters('diagnosticsStorageAccountName')]"
          },
          "accountid": {
            "value": "[variables('diagnosticsaccountid')]"
          }
        }
      }
    },
    {
      "name": "[variables('deployAntimalwareHost1')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[variables('paw1VMDeployment')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('vmAntimalwareTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vmName": {
            "value": "[variables('paw1VMName')]"
          }
        }
      }
    },
    {
      "name": "[variables('deployAntimalwareHost2')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[variables('paw2VMDeployment')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('vmAntimalwareTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vmName": {
            "value": "[variables('paw2VMName')]"
          }
        }
      }
    },
    {
      "name": "[variables('deployAntimalwareHost3')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[variables('paw3VMDeployment')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('vmAntimalwareTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vmName": {
            "value": "[variables('paw3VMName')]"
          }
        }
      }
    },
    {
      "name": "[variables('deployAntimalwareGW1')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[variables('gw1VMDeployment')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('vmAntimalwareTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vmName": {
            "value": "[variables('gw1VMName')]"
          }
        }
      }
    },
    {
      "name": "[variables('deployAntimalwareGW2')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[variables('gw2VMDeployment')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('vmAntimalwareTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vmName": {
            "value": "[variables('gw2VMName')]"
          }
        }
      }
    },
    {
      "name": "[variables('deployAntimalwareCB1')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[variables('cb1VMDeployment')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('vmAntimalwareTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vmName": {
            "value": "[variables('cb1VMName')]"
          }
        }
      }
    },
    {
      "name": "[variables('deployAntimalwareCB2')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[variables('cb2VMDeployment')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('vmAntimalwareTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vmName": {
            "value": "[variables('cb2VMName')]"
          }
        }
      }
    },
    {
      "name": "[variables('encryptHost1')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[variables('rdshDeploymentOnPAW1')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('vmADETemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vmName": {
            "value": "[variables('paw1VMName')]"
          },
          "adeKeyVaultName": {
            "value": "[parameters('adeKeyVaultName')]"
          },
          "keyVaultResourceGroup": {
            "value": "[parameters('adeKeyVaultResourceGroup')]"
          }
        }
      }
    },
    {
      "name": "[variables('encryptHost2')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[variables('rdshDeploymentOnPAW2')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('vmADETemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vmName": {
            "value": "[variables('paw2VMName')]"
          },
          "adeKeyVaultName": {
            "value": "[parameters('adeKeyVaultName')]"
          },
          "keyVaultResourceGroup": {
            "value": "[parameters('adeKeyVaultResourceGroup')]"
          }
        }
      }
    },
    {
      "name": "[variables('encryptHost3')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[variables('rdshDeploymentOnPAW3')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('vmADETemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vmName": {
            "value": "[variables('paw3VMName')]"
          },
          "adeKeyVaultName": {
            "value": "[parameters('adeKeyVaultName')]"
          },
          "keyVaultResourceGroup": {
            "value": "[parameters('adeKeyVaultResourceGroup')]"
          }
        }
      }
    },
    {
      "name": "[variables('encryptGW1')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[variables('gw1Deployment')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('vmADETemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vmName": {
            "value": "[variables('gw1VMName')]"
          },
          "adeKeyVaultName": {
            "value": "[parameters('adeKeyVaultName')]"
          },
          "keyVaultResourceGroup": {
            "value": "[parameters('adeKeyVaultResourceGroup')]"
          }
        }
      }
    },
    {
      "name": "[variables('encryptGW2')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[variables('gw2VMDeployment')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('vmADETemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vmName": {
            "value": "[variables('gw2VMName')]"
          },
          "adeKeyVaultName": {
            "value": "[parameters('adeKeyVaultName')]"
          },
          "keyVaultResourceGroup": {
            "value": "[parameters('adeKeyVaultResourceGroup')]"
          }
        }
      }
    },
    {
      "name": "[variables('encryptCB1')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[variables('cb1Deployment')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('vmADETemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vmName": {
            "value": "[variables('cb1VMName')]"
          },
          "adeKeyVaultName": {
            "value": "[parameters('adeKeyVaultName')]"
          },
          "keyVaultResourceGroup": {
            "value": "[parameters('adeKeyVaultResourceGroup')]"
          }
        }
      }
    },
    {
      "name": "[variables('encryptCB2')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[variables('cb2VMDeployment')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('vmADETemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vmName": {
            "value": "[variables('cb2VMName')]"
          },
          "adeKeyVaultName": {
            "value": "[parameters('adeKeyVaultName')]"
          },
          "keyVaultResourceGroup": {
            "value": "[parameters('adeKeyVaultResourceGroup')]"
          }
        }
      }
    }


  ],
  "outputs": {}
}
